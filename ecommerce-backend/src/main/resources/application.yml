server:
  port: 8080
  servlet:
    context-path: /api/v1
  error:
    include-stacktrace: never
    include-message: never
    include-binding-errors: never

spring:
  application:
    name: ecommerce-backend

  # Database Configuration
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/ecommerce_db}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 300000

  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        batch_versioned_data: true

  # Security Configuration
  security:
    require-ssl: true

  # Jackson Configuration
  jackson:
    default-property-inclusion: NON_NULL
    serialization:
      fail-on-empty-beans: false

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:myVerySecureJwtSecretKeyForHS512AlgorithmThatMeetsTheMinimum512BitsRequirementAndIsLongEnoughForSecurityPurposes2024}
  expiration: 86400000 # 24 hours
  refresh-expiration: 604800000 # 7 days

# Logging Configuration
logging:
  level:
    com.ecommerce.backend: INFO
    org.springframework.security: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: DEBUG
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/ecommerce-backend.log

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  security:
    enabled: true

# OpenAPI Documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    disable-swagger-default-url: true

# Rate Limiting Configuration
rate-limit:
  auth:
    capacity: 5
    tokens: 1
    duration: 60000 # 1 minute
  api:
    capacity: 100
    tokens: 10
    duration: 60000 # 1 minute

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
  h2:
    console:
      enabled: true
      path: /h2-console
  security:
    require-ssl: false

logging:
  level:
    root: INFO
    com.ecommerce.backend: DEBUG

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false

logging:
  level:
    root: WARN
    com.ecommerce.backend: INFO